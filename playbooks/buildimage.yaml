- hosts: all
  tasks:
#    - shell: |
#           echo {{ zuul.change_url }} | cut -d '/' -f 7
#      register: pullid
      
    - name: Pull the jar file 
      get_url:
        url: "{{ jfrog }}/artifactory/generic-local/gameoflife-{{ zuul_pull_id }}.war"
        dest: /home/ec2-user/work
        
 #   - set_fact: set input_location variable for emea
 #       input_location_emea={{ zuul_input_location_1 }}
        
 #   - set_fact: set input_location variable for emea
 #       input_location_nafta={{ zuul_input_location_2 }}    
        
    - name: Get the pipeline name in which job is being run
      debug:
        msg: "{{ zuul.pipeline }}"     
        
    - shell: |
           echo {{ zuul.pipeline }} | cut -d '_' -f 2
      register: location
        
    - set_fact:
       data_location="{{location.stdout}}"
       
    - name: block to check emea input files
      block:  
      - shell: |
             echo {{ zuul_input_location_1 }}
        register: inputfiles_emea   
      - set_fact:
         inputfile_location_emea="{{inputfiles_emea.stdout}}"
      when: '"nafta" not in data_location'  
      
    - name: block to check nafta input files
      block:  
      - shell: |
           echo {{ zuul_input_location_2 }}
        register: inputfiles_nafta  
      - set_fact:
         inputfile_location_nafta="{{inputfiles_nafta.stdout}}"   
      when: '"emea" not in data_location'    
      
#    - shell: |
#           if [ {{ data_location }} == "emea"]; then
#            echo {{ zuul_input_location_1 }} 
#           else
#            echo {{ zuul_input_location_2 }}
#           fi 
#      args:
#       executable: /bin/bash    
#      register: inputfiles_location
      
#    - set_fact:
#       inputfiles="{{inputfiles_location.stdout}}" 
       
#    - debug:
#        msg: "{{ inputfiles }}"
       
#    - name: Copy the input files from project work dir to home folder of user
#      shell: |
#           cp -ar ~/work/{{ data_location }}_input /home/ec2-user/work/
##      register: copy_status     
                    
    - name: build the docker file for emea
      shell: | 
           cd /home/ec2-user/work/
           cp -r {{ inputfile_location_emea }}/* .
           echo "FROM {{ jfrog_docker }}/docker-local/tomcat:latest" > /home/ec2-user/work/Dockerfile
           echo "COPY gameoflife-{{ zuul_pull_id }}.war   /usr/local/tomcat/webapps/" >> /home/ec2-user/work/Dockerfile
           echo "ADD input/*.*   /usr/local/tomcat/webapps/" >> /home/ec2-user/work/Dockerfile
           echo "CMD ./catalina.sh start"
           echo "EXPOSE 8080"
      when: '"nafta" not in data_location' 
           
    - name: build the docker file for nafta
      shell: | 
           cd /home/ec2-user/work/
           cp -r {{ inputfile_location_nafta }}/* .
           echo "FROM {{ jfrog_docker }}/docker-local/tomcat:latest" > /home/ec2-user/work/Dockerfile
           echo "COPY gameoflife-{{ zuul_pull_id }}.war   /usr/local/tomcat/webapps/" >> /home/ec2-user/work/Dockerfile
           echo "ADD input/*.*   /usr/local/tomcat/webapps/" >> /home/ec2-user/work/Dockerfile
           echo "RUN ls -laR /usr/local/webapps/*" >> /home/ec2-user/work/Dockerfile
           echo "CMD ./catalina.sh start"
           echo "EXPOSE 8080" 
      when: '"emea" not in data_location'
           
    - name : build the docker image 
      shell: |
           cd /home/ec2-user/work
           docker build -t {{ jfrog_docker }}/docker-local/tomcat:{{ zuul_pull_id }} . 
           
    - name: login to docker to push the images
      shell: |
           docker login -u admin -p password  {{ jfrog_docker }}
      register: login_status
           
    - name : push the docker images 
      shell: |
           docker push {{ jfrog_docker }}/docker-local/tomcat:{{ zuul_pull_id }} 
      when: login_status is succeeded         
      
#    - name: deploy to kubernetes
#      shell: |
#             cd ~/gameoflife
#             kubectl apply -f kubedeploy.yml
